// Need to use the React-specific entry point to import `createApi`
import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react";
import { OrderType } from "@/lib/types/types";

// Define a service using a base URL and expected endpoints
export const ordersApiSlice = createApi({
  baseQuery: fetchBaseQuery({ baseUrl: "/api/orders" }),
  reducerPath: "ordersApi",
  // Tag types are used for caching and invalidation.
  tagTypes: ["Orders"],
  endpoints: (build) => ({
    createOrder: build.mutation<OrderType, OrderType>({
      query: (order) => ({
        url: "/",
        method: "POST",
        body: order,
      }),
      invalidatesTags: ["Orders"],
    }),
    getOrders: build.query<OrderType[], void>({
      query: () => `/`,
      providesTags: (result, error, id) => ["Orders"],
    }),
  }),
});

// Hooks are auto-generated by RTK-Query
// Same as `quotesApiSlice.endpoints.getQuotes.useQuery`
export const { useCreateOrderMutation, useGetOrdersQuery } = ordersApiSlice;
